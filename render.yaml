services:
  - name: aeroespacial-site-service
    type: web
    env:
      - key: AMBIENTE
        value: dev
      - key: AWS_ACCESS_KEY_ID
        from: HOST_AWS_ACCESS_KEY_ID
      - key: AWS_SECRET_ACCESS_KEY
        from: HOST_AWS_SECRET_ACCESS_KEY
    buildCommand: docker build -t 806324789387.dkr.ecr.sa-east-1.amazonaws.com/dev/aeroespacial/aeroespacial:latest -f ./docker/app.dockerfile .
    startCommand: gunicorn -w 2 'server.web:app' -b '0.0.0.0:5000'
    ports:
      - 5000:5000

  - name: aeroespacial-worker-service
    type: worker
    env:
      - key: AMBIENTE
        value: dev
      - key: AWS_ACCESS_KEY_ID
        from: HOST_AWS_ACCESS_KEY_ID
      - key: AWS_SECRET_ACCESS_KEY
        from: HOST_AWS_SECRET_ACCESS_KEY
    buildCommand: docker build -t 806324789387.dkr.ecr.sa-east-1.amazonaws.com/dev/aeroespacial/aeroespacial:latest -f ./docker/app.dockerfile .
    startCommand: celery -A server.worker worker --concurrency=2 -B --loglevel=ERROR -E

  - name: aeroespacial-nginx-service
    type: web
    env:
      - key: NGINX_WORKERS
        value: "2"
      - key: NGINX_ACCEPT_MUTEX
        value: on
      - key: NGINX_SERVER_APP
        value: aeroespacial-site-service:5000
      - key: NGINX_ACCESS_LOG
        value: off
      - key: NGINX_STATIC_FOLDER
        value: /usr/share/nginx/html/static
      - key: NGINX_TIMEOUT
        value: "300"
    buildCommand: docker build -t 806324789387.dkr.ecr.sa-east-1.amazonaws.com/dev/nginx:latest -f ./docker/nginx.dockerfile .
    startCommand: nginx -g 'daemon off;'
    ports:
      - 8080:80

  - name: aeroespacial-redis-service
    image: redis:7.2.0-alpine3.18
    type: web

volumes:
  - name: aeroespacial-static-volume

networks:
  - name: aeroespacial-network
    external: false
